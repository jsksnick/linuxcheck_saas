# uncompyle6 version 3.7.4
# Python bytecode 2.7 (62211)
# Decompiled from: Python 2.7.9 Stackless 3.1b3 060516 (default, Nov 28 2016, 09:05:13) 
# [GCC 4.4.7 20120313 (Red Hat 4.4.7-17)]
# Embedded file name: /bkdata/vcs2/tmp/linuxcheck_saas-1561098846.95/linuxcheck_saas/src/home_application/normal_check_script.py
# Compiled at: 2019-06-21 14:34:36
check_items = {'title': {'content': '#!/bin/bash\n#Author:Allen\n#Descripttion:Collect server information\n#company:canway\n################################################################\nexport LANG="en_US.UTF-8"\nsystemnum=`cat /etc/redhat-release |grep -o \'[0-9]\' |head -n 1`\nsystem_type=`dmesg |grep -i hypervisor`\n', 
             'has_param': False}, 
   'product_name': {'content': '#\xe6\x9f\xa5\xe7\x9c\x8b\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe5\x9e\x8b\xe5\x8f\xb7\nProductName=`dmidecode |grep \'Product Name:\' |uniq |awk -F \':\' \'{print $2}\' |awk  \'{print $1}\' |tr -d \'\\n\'`\necho "product_name=${ProductName}"\n', 
                    'has_param': False}, 
   'cpu_info': {'content': '#cpu\xe4\xbf\xa1\xe6\x81\xaf\ncpu_num=`cat /proc/cpuinfo |grep "physical id" |uniq |wc -l`\necho "cpu_info=<table class^\\"new_table\\">" |tr -d \'\\n\'\nfor i in `seq 1 ${cpu_num}`\ndo\n    cpu_n=`cat /proc/cpuinfo |grep "physical id" |uniq |sed -n "${i}p"`\n    read a b c d < <(echo $cpu_n)\n    cpuinfo=`cat /proc/cpuinfo | egrep -B5  "^${a}.*${d}$" |grep "model name" | tail -n 1 | awk -F \':\' \'{print $2}\' |sed \'s/^[ \\t]*//g\'`\n    echo "<tr><td>${cpuinfo}</td></tr>" |tr -d \'\\n\'\ndone\necho "</table>"\n', 
                'has_param': False}, 
   'disk_info': {'content': '#\xe6\x9c\xac\xe5\x9c\xb0\xe7\xa3\x81\xe7\x9b\x98\xe4\xbf\xa1\xe6\x81\xaf\ndisk_num=`fdisk -l 2> /dev/null |grep "Disk /dev/" |egrep -v \'mapper|dm\' |awk \'{print $2,$3,$4}\' |uniq |awk -F/ \'{print $3}\' |sed s/[[:space:]]//g |wc -l`\necho "disk_info=<table class^\\"new_table\\">" |tr -d \'\\n\'\nfor i in `seq 1 $disk_num`\ndo\n    disk_info=`fdisk -l 2> /dev/null |grep "Disk /dev/" |egrep -v \'mapper|dm\' |awk \'{print $2,$3,$4}\' |uniq |awk -F/ \'{print $3}\' |sed -n ${i}p |sed s/[[:space:]]//g |tr -d \',\' |tr \':\' \' \'`\n    read a b < <(echo ${disk_info})\n    echo "<tr><td>$a</td><td>$b</td></tr>" |tr -d \'\\n\'\ndone\necho "</table>"\n', 
                 'has_param': False}, 
   'mem_info': {'content': '#\xe5\x86\x85\xe5\xad\x98\xe4\xbf\xa1\xe6\x81\xaf\nmem_k=`cat /proc/meminfo |grep MemTotal |awk \'{print $2}\'`\nbc=`which bc 2>/dev/null`\nif [ -n "$bc" ];then\n    mem_g=$(printf "%.2f" `echo "scale=2; ${mem_k}/1024/1024" |bc`)\nelse\n    mem_g=`free -g |grep  Mem |awk \'{print $2}\'`\nfi\nmem_num=`dmidecode |grep DDR |wc -l`\nif [ $mem_num != 0 ];then\n    echo "mem_info=\xe5\x86\x85\xe5\xad\x98\xe6\x9d\xa1\xe6\x95\xb0\xe9\x87\x8f:${mem_num}\xe6\x9d\xa1,\xe5\x86\x85\xe5\xad\x98\xe6\x80\xbb\xe9\x87\x8f:${mem_g}G"\nelse\n    echo "mem_info=\xe5\x86\x85\xe5\xad\x98\xe6\x80\xbb\xe9\x87\x8f:${mem_g}G"\nfi\n', 
                'has_param': False}, 
   'fc_info': {'content': '#\xe5\x85\x89\xe7\xba\xa4\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf\nlspci=`lspci 2>/dev/null`\nif [ ! -n "${lspci}" ];then\n    echo "fc_info=\xe7\xb3\xbb\xe7\xbb\x9f\xe6\x9c\xaa\xe5\xae\x89\xe8\xa3\x85pciuntils\xe5\xb7\xa5\xe5\x85\xb7\xe5\x8c\x85\xef\xbc\x8c\xe6\x97\xa0\xe6\xb3\x95\xe8\x8e\xb7\xe5\x8f\x96\xe5\x85\x89\xe7\xba\xa4\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf"\nelse\n    FC=`lspci |grep "Fibre Channel" |awk -F \':\' \'{print $3}\' |awk -F \'to\' \'{print $1}\' |sed \'s/^[ \\t]*//g\'`\n    if [ ! -n "${FC}" ];then\n        echo "fc_info=null"\n    else\n        echo "fc_info=`echo ${FC}`"\n    fi\nfi\n', 
               'has_param': False}, 
   'raid_info': {'content': '#RAID\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf\nlspci=`lspci 2>/dev/null`\nif [ ! -n "${lspci}" ];then\n    echo "raid_info=\xe7\xb3\xbb\xe7\xbb\x9f\xe6\x9c\xaa\xe5\xae\x89\xe8\xa3\x85pciuntils\xe5\xb7\xa5\xe5\x85\xb7\xe5\x8c\x85\xef\xbc\x8c\xe6\x97\xa0\xe6\xb3\x95\xe8\x8e\xb7\xe5\x8f\x96raid\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf"\nelse\n    RAID_ID=`lspci |grep RAID |awk -F \':\' \'{print $NF}\' |awk -F \'(\' \'{print $1}\' |awk -F \'[\' \'{print $1}\' |sed \'s/^[ \\t]*//g\'`\n    if [ ! -n "${RAID_ID}" ];then\n        echo "raid_info=null"\n    else\n        echo "raid_info=${RAID_ID}"\n    fi\nfi\n', 
                 'has_param': False}, 
   'nic_info': {'content': '#\xe7\xbd\x91\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf\nlspci=`lspci 2>/dev/null`\nif [ ! -n "${lspci}" ];then\n   echo "nic_info=\xe7\xb3\xbb\xe7\xbb\x9f\xe6\x9c\xaa\xe5\xae\x89\xe8\xa3\x85pciuntils\xe5\xb7\xa5\xe5\x85\xb7\xe5\x8c\x85\xef\xbc\x8c\xe6\x97\xa0\xe6\xb3\x95\xe8\x8e\xb7\xe5\x8f\x96\xe7\xbd\x91\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf"\nelse\n    nic_name=`lspci |grep -i eth |awk -F\': \' \'{print $2}\'`\n    nic_num=`lspci |grep -i eth |awk -F\': \' \'{print $2}\' |wc -l`\n    if [ $nic_num == 0 ];then\n        echo "nic_info=\xe6\x9c\xaa\xe5\xae\x89\xe8\xa3\x85\xe7\xbd\x91\xe5\x8d\xa1"\n    elif [ $nic_num == 1 ];then\n        echo "nic_info=${nic_name}"\n    else\n        nic_name_a=`lspci |grep -i eth |awk -F\': \' \'{print $2}\' |tr \'\\n\' \'</td><td>\'`\n        echo "nic_info=<table class^\\"new_table\\"><tr><td>${nic_name_a}</td></tr></table>"\n    fi\nfi\n', 
                'has_param': False}, 
   'hostname': {'content': '#\xe4\xb8\xbb\xe6\x9c\xba\xe5\x90\x8d\xe8\xaf\x8d\nhostname=`hostname`\necho "hostname=${hostname}"\n', 
                'has_param': False}, 
   'operating_system': {'content': '#\xe6\x93\x8d\xe4\xbd\x9c\xe7\xb3\xbb\xe7\xbb\x9f\xe7\x89\x88\xe6\x9c\xac\nsys_name=`cat /etc/redhat-release`\necho "operating_system=${sys_name}"\n', 
                        'has_param': False}, 
   'system_kernel': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe5\x86\x85\xe6\xa0\xb8\xe7\x89\x88\xe6\x9c\xac\nuname=`uname -r`\necho "system_kernel=${uname}"\n', 
                     'has_param': False}, 
   'system_install_time': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe5\xae\x89\xe8\xa3\x85\xe6\x97\xb6\xe9\x97\xb4\nrpm_time=`rpm -qa |grep ^coreutils-* |head -n 1`\nsystem_install_time=`rpm -qi ${rpm_time} |grep "Build Date" |awk -F"Build Date" \'{print $2}\' |awk \'{print $5,$4,$3,$2,$6}\'`\necho "system_install_time=${system_install_time=}"\n', 
                           'has_param': False}, 
   'time_set': {'content': '#\xe6\x97\xb6\xe5\x8c\xba\xe8\xae\xbe\xe7\xbd\xae\ncase $systemnum in\n7)\ntime_zone=`ls -l /etc/localtime |awk -F\'/\' \'{print $(NF-1),$NF}\' |tr \' \' \'/\'`\necho "time_set=${time_zone}"\n;;\n*)\ntime_zone=`cat /etc/sysconfig/clock |grep  ZONE |awk -F\'"\' \'{print $2}\' |grep -v ^$`\necho "time_set=${time_zone}"\n;;\nesac\n', 
                'has_param': False}, 
   'shell_account': {'content': '#\xe5\xb8\xa6Shell\xe7\x9a\x84\xe7\x94\xa8\xe6\x88\xb7\nshell_user=`cat /etc/passwd |egrep -v "nologin|shutdown" |grep sh |awk -F \':\' \'{print $1}\' |tr \'\\n\' \',\' |sed "s/\\,$//g"`\necho "shell_account=${shell_user}"\n', 
                     'has_param': False}, 
   'limit_set': {'content': '#LIMIT\xe5\x8f\x82\xe6\x95\xb0\xe8\xae\xbe\xe7\xbd\xae\xe6\x83\x85\xe5\x86\xb5\nm=`cat /etc/security/limits.conf |grep -v "^#" |grep -v "^$"  |tr -s [:space:]`\nn=`cat /etc/security/limits.conf |grep -v "^#" |grep -v "^$"  |tr -s [:space:] |wc -l`\nif [ -n "${m}" ];then\n    echo "limit_set=<table class^\\"new_table\\">" |tr -d \'\\n\'\n    for i in  `seq 1 $n`\n    do\n        if [ -n "${m}" ];then\n            read a b c d < <(cat /etc/security/limits.conf |grep -v "^#" |grep -v "^$"  |tr -s [:space:] |sed -n ${i}p)\n            echo "<tr><td>$a</td><td>$b</td><td>$c</td><td>$d</td></tr>" |tr -d \'\\n\'\n        fi\n    done\n    echo "</table>"\nelse\n    echo "limit_set=null"\nfi\n', 
                 'has_param': False}, 
   'openssh_port': {'content': '#openssh\xe5\xbc\x80\xe5\x90\xaf\xe7\x9a\x84\xe7\xab\xaf\xe5\x8f\xa3\nssh_port=`cat /etc/ssh/sshd_config |grep -v "^#" |grep Port |awk \'{print $2}\'`\nif [ -n "${ssh_port}" ];then\n    echo "openssh_port=${ssh_port}"\nelse\n    echo "openssh_port=22"\nfi\n', 
                    'has_param': False}, 
   'openssh_sftp_status': {'content': '#sftp\xe6\x98\xaf\xe5\x90\xa6\xe5\xbc\x80\xe5\x90\xaf\nsftp=`cat /etc/ssh/sshd_config |grep -v "^#" |grep sftp |grep -i subsystem`\nif [ -n "$sftp" ];then\n    echo "openssh_sftp_status=sftp\xe5\xb7\xb2\xe5\xbc\x80\xe5\x90\xaf"\nelse\n    echo "openssh_sftp_status=sftp\xe7\xa6\x81\xe7\x94\xa8"\nfi\n', 
                           'has_param': False}, 
   'openssh_key_auth': {'content': '#\xe5\xaf\x86\xe9\x92\xa5\xe8\xae\xa4\xe8\xaf\x81\xe6\x9c\xba\xe5\x88\xb6\nssh_pass=`cat /etc/ssh/sshd_config |grep -v "^#" |grep "PasswordAuthentication" |grep \'yes\'`\nif [ -n "$ssh_pass" ];then\n    echo "openssh_key_auth=\xe5\x85\x81\xe8\xae\xb8\xe5\xaf\x86\xe7\xa0\x81\xe7\x99\xbb\xe9\x99\x86"\nelse\n    echo "openssh_key_auth=\xe7\xa6\x81\xe6\xad\xa2\xe5\xaf\x86\xe7\xa0\x81\xe7\x99\xbb\xe9\x99\x86"\nfi\n', 
                        'has_param': False}, 
   'sys_running_time': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe8\xbf\x90\xe8\xa1\x8c\xe6\x97\xb6\xe9\x97\xb4\nuptime=`uptime |awk -F \',\' \'{print $1}\' |awk \'{print $3,$4}\'`\necho "sys_running_time=${uptime}"\n', 
                        'has_param': False}, 
   'mem_use_status': {'content': '#\xe7\x89\xa9\xe7\x90\x86\xe5\x86\x85\xe5\xad\x98\xe4\xbd\xbf\xe7\x94\xa8\xe6\x83\x85\xe5\x86\xb5\ncase $systemnum in\n7)\nmem_total_m=$(free -m |grep Mem |awk \'{print $2}\')\nmem_used_m=$(free -m |grep Mem |awk \'{print $3}\')\nmem_free_m=$(free -m |grep Mem |awk \'{print $4}\')\nmem_buff_cache_m=$(free -m |grep Mem |awk \'{print $6}\')\nmem_real_free=$[${mem_free_m}+${mem_buff_cache_m}]\nmem_real_used=$[${mem_total_m}-${mem_real_free}]\nmem_per=$(printf "%d%%" $((${mem_real_used}*100/${mem_total_m})))\n;;\n*)\nmem_total_m=$(free -m |grep Mem |awk \'{print $2}\')\nmem_used_m=$(free -m |grep Mem |awk \'{print $3}\')\nmem_free_m=$(free -m |grep Mem |awk \'{print $4}\')\nmem_buffers_m=$(free -m |grep Mem |awk \'{print $6}\')\nmem_cached_m=$(free -m |grep Mem |awk \'{print $7}\')\nmem_real_free=$[${mem_free_m}+${mem_buffers_m}+${mem_cached_m}]\nmem_real_used=$[${mem_total_m}-${mem_real_free}]\nmem_per=$(printf "%d%%" $((${mem_real_used}*100/${mem_total_m})))\n;;\nesac\necho "mem_use_status=<table class^"new_table"><tr><th>\xe5\x86\x85\xe5\xad\x98\xe6\x80\xbb\xe9\x87\x8f</th><th>\xe5\xb7\xb2\xe7\x94\xa8\xe5\x86\x85\xe5\xad\x98</th><th>\xe7\xa9\xba\xe9\x97\xb2\xe5\x86\x85\xe5\xad\x98</th><th>\xe5\x86\x85\xe5\xad\x98\xe4\xbd\xbf\xe7\x94\xa8\xe7\x8e\x87</th></tr><tr><td>${mem_total_m}M</td><td>${mem_real_used}M</td><td>${mem_real_free}M</td><td>${mem_per}</td></tr></table>"\n', 
                      'has_param': False}, 
   'login_account_info': {'content': '#\xe5\xb7\xb2\xe7\x99\xbb\xe5\xbd\x95\xe7\x94\xa8\xe6\x88\xb7\xe4\xbf\xa1\xe6\x81\xaf\nm=`who |wc -l`\nif [ $m == 0 ];then\n    echo "login_account_info=null"\nelse\n    echo  "login_account_info=<table class^\\"new_table\\">" |tr -d \'\\n\'\n    for i in `seq 1 $m`\n    do\n        read a b c d e f < <(who |tr -s [:space:] |sed -n ${i}p)\n        echo "<tr><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td><td>${e}</td><td>${f}</td></tr>" |tr -d \'\\n\'\n    done\n    echo "</table>"\nfi\n', 
                          'has_param': False}, 
   'task_info': {'content': '#\xe5\xb7\xb2\xe9\x85\x8d\xe7\xbd\xae\xe7\x9a\x84\xe5\xae\x9a\xe6\x97\xb6\xe4\xbb\xbb\xe5\x8a\xa1\nz=0\necho "task_info=<table class^\\"new_table\\">" |tr -d \'\\n\'\nfor user in $(cut -f1 -d: /etc/passwd)\ndo\n    cron=`crontab -l -u ${user} 2>/dev/null`\n    if [ -n "$cron" ];then\n        n=`crontab -l -u ${user} |wc -l`\n        for m in `seq 1 $n`\n        do\n            let z+=1\n            read a b c d e f < <(crontab -l -u ${user} |sed -n "${m}p" |sed "s/$/;/g")\n            echo "<tr><td>$a</td><td>$b</td><td>$c</td><td>$d</td><td>$e</td><td>$user</td><td>$f</td><tr>" |tr -d \'\\n\'\n        done\n    fi\ndone\nif [ $z == 0 ];then\n    echo "null</table>"\nelse\n    echo "</table>"\nfi\n', 
                 'has_param': False}, 
   'boot_mount_part': {'content': '#\xe5\xbc\x80\xe6\x9c\xba\xe8\x87\xaa\xe5\x8a\xa8\xe6\x8c\x82\xe8\xbd\xbd\xe7\x9a\x84\xe5\x88\x86\xe5\x8c\xba\nn=`cat /etc/fstab |grep -v "^#" |grep -v "^$" |wc -l`\necho  "boot_mount_part=<table class^\\"new_table\\">" |tr -d \'\\n\'\nfor i in `seq 1 $n`\ndo\n    m=`cat /etc/fstab |grep -v "^#" |grep -v  ^$ |sed -n "${i}p" |tr -s [:space:]`\n    read a b c d e f < <(echo $m)\n    a=`echo  $a |tr \'=\' \'^\' 2>/dev/null`\n    d=`echo  $d |tr \'=\' \'^\' 2>/dev/null`\n    echo "<tr><td>$a</td><td>$b</td><td>$c</td><td>$d</td><td>"$e"</td><td>"$f"</td><tr>" |tr -d \'\\n\'\ndone\necho "</table>"\n', 
                       'has_param': False}, 
   'ethernet_info': {'content': '#\xe7\xbd\x91\xe5\x8d\xa1\xe4\xbf\xa1\xe6\x81\xaf\nethernet_info=`ip a |grep "inet " | egrep -v \'127.0.0.1|bond\' |grep -v MASTER|awk \'{print $NF,$2}\'`\nethernet_num=`ip a |grep "inet " | egrep -v \'127.0.0.1|bond\' |grep -v MASTER|awk \'{print $NF,$2}\' |wc -l`\necho  "ethernet_info=<table class^\\"new_table\\">" |tr -d \'\\n\'\nfor i in `seq 1 $ethernet_num`\ndo\n    ethernet=`ip a |grep "inet " | egrep -v \'127.0.0.1|bond\' |grep -v MASTER|awk \'{print $NF,$2}\' |sed -n ${i}p`\n    read a b < <(echo $ethernet)\n    echo "<tr><td>$a</td><td>$b</td></tr>" |tr -d \'\\n\'\ndone\necho "</table>"\n', 
                     'has_param': False}, 
   'nic_bond_info': {'content': '#\xe7\xbd\x91\xe5\x8d\xa1\xe7\xbb\x91\xe5\xae\x9a\xe4\xbf\xa1\xe6\x81\xaf\nbond_name=`ip a |grep  MASTER |awk -F\': \' \'{print $2}\'`\nif [ -n "${bond_name}" ];then\n    echo "nic_bond_info=<table class^\\"new_table\\"><tr><th>name</th><th>member</th><th>status</th></tr>" |tr -d \'\\n\'\n    for bond in $bond_name\n    do\n        slave_name=`ip a |grep master|grep $bond |awk -F\': \' \'{print $2}\' |tr \'\\n\' \' \' |sed \'s/[ \\t]*$//g\'`\n        if [ -n "${slave_name}" ];then\n            echo "<tr><td>${bond}</td>${slave_name}<td>\xe5\x90\xaf\xe7\x94\xa8</td></tr>" |tr -d \'\\n\'\n        else\n            echo "<tr><td>${bond}</td>${slave_name}<td>\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8</td></tr>" |tr -d \'\\n\'\n        fi\n    done\n    echo "</table>"\nelse\n    echo "nic_bond_info=null"\nfi\n', 
                     'has_param': False}, 
   'nfs_info': {'content': '#NFS\xe6\x8c\x82\xe8\xbd\xbd\xe7\x8a\xb6\xe6\x80\x81\nnfs_info=$(mount 2>/dev/null | grep \':/\' |tr \'\\n\' \';\')\nif [ -n "${nfs_info}" ];then\n   echo "nfs_info=${nfs_info}"\nelse\n    echo "nfs_info=null"\nfi\n', 
                'has_param': False}, 
   'multi_path_info': {'content': '#\xe5\xa4\x9a\xe8\xb7\xaf\xe5\xbe\x84\xe7\xae\xa1\xe7\x90\x86\xe8\xbd\xaf\xe4\xbb\xb6\xe8\xbf\x90\xe8\xa1\x8c\xe7\x8a\xb6\xe6\x80\x81\nmultipathflag=1\nmulti_status=`multipath -ll 2>/dev/null|grep status`\nif [ -n "${multi_status}" ];then\n    multipathflag=0\n    multi_err=`multipath -ll |egrep -i \'failed|disabled\'`\n    if [ -n "${multipathflag}" ];then\n        echo "multi_path_info=\xe5\xa4\x9a\xe8\xb7\xaf\xe5\xbe\x84\xe5\xbc\x82\xe5\xb8\xb8\xef\xbc\x8c\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5"\n    else\n        echo "multi_path_info=\xe6\xad\xa3\xe5\xb8\xb8"\n    fi\nfi\npowermt_status=`powermt display dev=all 2>/dev/null |grep state`\nif [ -n "${powermt_status}" ];then\n    multipathflag=0\n    powermt_err=`powermt display dev=all |egrep -i \'failed|disabled\'`\n    if [ -n "${powermt_err}" ];then\n        echo "multi_path_info=\xe5\xa4\x9a\xe8\xb7\xaf\xe5\xbe\x84\xe5\xbc\x82\xe5\xb8\xb8,\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5"\n    else\n        echo "multi_path_info=\xe6\xad\xa3\xe5\xb8\xb8"\n    fi\nfi\nif [ ${multipathflag} -ne 0 ];then\n    echo "multi_path_info=null"\nfi\n', 
                       'has_param': False}, 
   'monitor_port': {'content': '#\xe7\x9b\x91\xe5\x90\xac\xe7\x9a\x84\xe7\xab\xaf\xe5\x8f\xa3\xe5\x92\x8c\xe8\xbf\x9b\xe7\xa8\x8b\xe4\xbf\xa1\xe6\x81\xaf\nnetstat=`which netstat 2>/dev/null`\nif [ ! -n "$netstat" ];then\n    echo "monitor_port=\xe7\xb3\xbb\xe7\xbb\x9f\xe6\x9c\xaa\xe5\xae\x89\xe8\xa3\x85net-tool\xe7\xbb\x84\xe4\xbb\xb6\xef\xbc\x8c\xe6\x97\xa0\xe6\xb3\x95\xe8\x8e\xb7\xe5\x8f\x96\xe7\xab\xaf\xe5\x8f\xa3\xe8\xbf\x9b\xe7\xa8\x8b\xe4\xbf\xa1\xe6\x81\xaf"\nelse\n    num=`netstat -tunpel |awk \'{print  $1,$4,$NF}\' |sed \'1,2d\' |wc -l`\n    echo "monitor_port=<table class^\\"new_table\\"><tr><th>protocol</th><th>port</th><th>process_name</th></tr>" |tr -d \'\\n\'\n    for i in `seq 1 $num`\n    do\n        read a b c < <(netstat -tunpel |awk \'{print $1,$4,$NF}\' |sed \'1,2d\' |sed -n "${i}p")\n        echo "<tr><td>${a}</td><td>${b}</td><td>${c}</td></tr>" |tr -d \'\\n\'\n    done\n    echo \'</table>\'\nfi\n', 
                    'has_param': False}, 
   'ntp_set': {'content': '#NTP\xe9\x85\x8d\xe7\xbd\xae\nwarn=0\n#ntpdate=`cat /etc/crontab |grep -v "^#" |grep ntpdate`\nntpdate=`cat /var/spool/cron/root |grep -v \'^\\s*#\'|grep \'ntpdate\'` || ntpdate=\'\'\ncase ${systemnum} in\n7)\nchronyserver=$(cat /etc/chrony.conf 2> /dev/null | egrep -v \'^$|^\\s*#\' | egrep \'^(\\s.*)?server\' | egrep -v \'rhel|127.127.1.0|centos\' |awk \'{print $2}\' |tr \'\n\' \',\' |sed "s/\\,$//g")\nsystemctl status chronyd.service &> /dev/null\nchronyd=$?\nif [ -n "${chronyserver}" -a "${chronyd}" -eq 0 ];then\n    warn=1\n    chronyd_status=`chronyc sources -v 2>/dev/null |egrep \'*|+\'`\n    if [ -n "${chronyd_status}" ];then\n        echo "ntp_set=\xe7\xb3\xbb\xe7\xbb\x9f\xe8\xae\xbe\xe7\xbd\xae\xe4\xba\x86\xe6\x97\xb6\xe9\x97\xb4\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8,\xe4\xb8\x94\xe8\xbf\x9e\xe6\x8e\xa5\xe6\xad\xa3\xe5\xb8\xb8:${chronyserver}" |tr -d \'\n\'\n    else\n        echo "ntp_set=\xe7\xb3\xbb\xe7\xbb\x9f\xe9\x85\x8d\xe7\xbd\xae\xe4\xba\x86\xe6\x97\xb6\xe9\x97\xb4\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xef\xbc\x8c\xe4\xbd\x86\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xbc\x82\xe5\xb8\xb8\xef\xbc\x8c\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5:${chronyserver}" |tr -d \'\n\'\n    fi\nfi\n;;\n*)\nntpserver=`cat /etc/ntp.conf 2>/dev/null |egrep \'^(\\s.*)?server\' | egrep -v \'rhel|127.127.1.0|centos\' |awk \'{print $2}\' |tr \'\n\' \',\' |sed "s/\\,$//g"`\nservice ntpd status &> /dev/null\nntpd=$?\nif [ -n "${ntpserver}" -a "${ntpd}" -eq 0 ];then\n    warn=1\n    ntpd_status=`ntpq -p 2>/dev/null |egrep \'*|+\'`\n    if [ -n "${ntpd_status}" ];then\n        echo "ntp_set=\xe7\xb3\xbb\xe7\xbb\x9f\xe8\xae\xbe\xe7\xbd\xae\xe4\xba\x86\xe6\x97\xb6\xe9\x97\xb4\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8,\xe4\xb8\x94\xe8\xbf\x9e\xe6\x8e\xa5\xe6\xad\xa3\xe5\xb8\xb8:${ntpserver}" |tr -d \'\n\'\n    else\n        echo "ntp_set=\xe7\xb3\xbb\xe7\xbb\x9f\xe9\x85\x8d\xe7\xbd\xae\xe4\xba\x86\xe6\x97\xb6\xe9\x97\xb4\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xef\xbc\x8c\xe4\xbd\x86\xe8\xbf\x9e\xe6\x8e\xa5\xe5\xbc\x82\xe5\xb8\xb8\xef\xbc\x8c\xe8\xaf\xb7\xe6\xa3\x80\xe6\x9f\xa5:${ntpserver}" |tr -d \'\n\'\n    fi\nfi\n;;\nesac\nif [[ ${warn} -eq 1 && -n "${ntpdate}" ]];then\necho ";\xe7\xb3\xbb\xe7\xbb\x9f\xe8\xbf\x98\xe8\xae\xbe\xe7\xbd\xaentpdate\xe8\xae\xa1\xe5\x88\x92\xe4\xbb\xbb\xe5\x8a\xa1\xe5\x90\x8c\xe6\xad\xa5\xe6\x97\xb6\xe9\x97\xb4\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8:" |tr -d \'\n\' && echo "${ntpdate}" |tr -d \'\n\'\nelif [[ ${warn} -eq 0 && -n "${ntpdate}" ]];then\necho "ntp_set=\xe5\xb7\xb2\xe8\xae\xbe\xe7\xbd\xaentpdate\xe8\xae\xa1\xe5\x88\x92\xe4\xbb\xbb\xe5\x8a\xa1\xe5\x90\x8c\xe6\xad\xa5\xe6\x97\xb6\xe9\x97\xb4\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8:" | tr -d \'\n\' && echo "${ntpdate}" |tr -d \'\n\'&& warn=1\nfi\n\nif [[ ${warn} -eq 1 ]];then\necho \'@@0\'\nelif [[ ${warn} -eq 0 ]];then\necho "ntp_set=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1"\nfi\n', 
               'has_param': False}, 
   'run_mode': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe8\xbf\x90\xe8\xa1\x8c\xe6\xa8\xa1\xe5\xbc\x8f\nrun_mode=%s\nrunlevel=`runlevel |awk \'{print $2}\'`\nwarn=0\nif [ ${runlevel} -ne ${run_mode} ];then\n    warn=1\n    echo "run_mode=${runlevel}@@1"\nelse\n    echo "run_mode=${runlevel}@@0"\nfi\n', 
                'has_param': True, 'default_param': 3}, 
   'syslog_audit': {'content': '#\xe6\x97\xa5\xe5\xbf\x97\xe5\xae\xa1\xe6\xa0\xb8\ncase $systemnum in\n5)\nservice syslog status &>/dev/null\nsyslog=$?\nif [ "${syslog}" -eq 0 ];then\n    echo "syslog_audit=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "syslog_audit=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi;;\n7)\nsystemctl status systemd-journald.service &>/dev/null\nsystemd_journald=$?\nif [ "${systemd_journald}" -eq 0 ];then\n    echo "syslog_audit=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "syslog_audit=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\n*)\nservice rsyslog status &>/dev/null\nrsyslog=$?\nif [ "${rsyslog}" -eq 0 ];then\n    echo "syslog_audit=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "syslog_audit=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\nesac\n', 
                    'has_param': False}, 
   'syslog_dump': {'content': '#syslog\xe6\x97\xa5\xe5\xbf\x97\xe8\xbd\xac\xe5\x82\xa8\xe7\xad\x96\xe7\x95\xa5\nlogrotate=`cat /etc/logrotate.conf |grep -v "^#" |grep -v ^$ |egrep rotate`\nif [ -n "${logrotate}" ];then\n    echo "syslog_dump=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "syslog_dump=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n', 
                   'has_param': False}, 
   'sys_audit': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe5\xae\xa1\xe8\xae\xa1\ncase $systemnum in\n7)\nsystemctl status auditd.service &> /dev/null\naudit=$?\nif [ "${audit}" -eq 0 ];then\n    echo "sys_audit=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "sys_audit=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\n*)\nservice auditd status &>/dev/null\naudit=$?\nif [ "${audit}" -eq 0 ];then\n    echo "sys_audit=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "sys_audit=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\nesac\n', 
                 'has_param': False}, 
   'log_net': {'content': '#\xe7\xbd\x91\xe7\xbb\x9c\xe6\x97\xa5\xe5\xbf\x97\xe6\x9c\x8d\xe5\x8a\xa1\xe5\x99\xa8\xe5\x8a\x9f\xe8\x83\xbd\ncase $systemnum in\n5)\nsyslog=`cat /etc/syslog.conf 2>/dev/null |grep -v "^#" |grep \'@\'`\nif [ -n "${syslog}" ];then\n    echo "log_net=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "log_net=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\n*)\nrsyslog=`cat /etc/rsyslog.conf 2>/dev/null |grep -v "^#" |grep \'@\'`\nif [ -n "${rsyslog}" ];then\n    echo "log_net=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "log_net=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\nesac\n', 
               'has_param': False}, 
   'glipc_vulnerabilities': {'content': '#glipc\xe6\xbc\x8f\xe6\xb4\x9e\nrv=0\nfor glibc_nvr in $( rpm -q --qf \'%{name}-%{version}-%{release}.%{arch}\\n\' glibc ); do\n    glibc_ver=$( echo "$glibc_nvr" | awk -F- \'{ print $2 }\' )\n    glibc_maj=$( echo "$glibc_ver" | awk -F. \'{ print $1 }\')\n    glibc_min=$( echo "$glibc_ver" | awk -F. \'{ print $2 }\')\n    if [ "$glibc_maj" -gt 2   -o  \\( "$glibc_maj" -eq 2  -a  "$glibc_min" -ge 18 \\) ]; then\n        # fixed upstream version\n        echo \'\' |tr -d \'\\n\'\n    else\n        # all RHEL updates include CVE in rpm %changelog\n        if rpm -q --changelog "$glibc_nvr" | grep -q \'CVE-2015-0235\'; then\n        echo \'\' |tr -d \'\\n\'\n        else\n            rv=1\n        fi\n    fi\ndone\nif [ $rv -ne 0 ]; then\n    echo "glipc_vulnerabilities=CVE-2015-0235@@1"\nelse\n    echo "glipc_vulnerabilities=\xe6\x97\xa0@@0"\nfi\n', 
                             'has_param': False}, 
   'bash_vulnerabilities': {'content': '#bash\xe6\xbc\x8f\xe6\xb4\x9e\nVUNERABLE=false;\nCVE20146271="$(env \'x=() { :;}; echo vulnerable\' \'BASH_FUNC_x()=() { :;}; echo vulnerable\' bash -c "echo test" 2>&1 )"\nCVE20147169=$(cd /tmp 2>&1; rm -f /tmp/echo 2>&1; env \'x=() { (a)=>\\\' bash -c "echo uname" 2>&1; cat /tmp/echo 2>&1; rm -f /tmp/echo 2>&1 )\nif [[ "$CVE20146271" =~ "vulnerable" ]];then\n    CVE_20146217=vulnerable\n    VUNERABLE=true;\nelif [[ "$CVE20146271" =~ "bash: error importing function definition for \'x\'" ]];then\n    CVE_20146217=notfix\nelse\n    CVE_20146217=safety\nfi\nif [[ "$CVE20147169" =~ "Linux" ]];then\n    CVE_20147169=vulnerable\n    VUNERABLE=true;\nelse\n    CVE_20147169=safety\nfi\nif [[ "$VUNERABLE" = true ]];then\n    echo "bash_vulnerabilities=" |tr -d \'\\n\'\n    [[ "${CVE_20146217}" = vulnerable ]] && echo "CVE-2014-6271" |tr -d \'\\n\'\n    [[ "${CVE_20147169}" = vulnerable ]] && echo ",CVE-2014-7169" |tr -d \'\\n\'\n    echo "@@1"\nelse\n    echo "bash_vulnerabilities=\xe6\x97\xa0@@0"\nfi\n', 
                            'has_param': False}, 
   'openssl_vulnerabilities': {'content': '#openssl\xe6\xbc\x8f\xe6\xb4\x9e\nopenssl=`rpm -qa |grep ^openssl-[0-9] |awk -F- \'{print $3}\' |awk -F. \'{print $1}\' |uniq`\ncase $systemnum in\n5)\na=0\necho "openssl_vulnerabilities=" |tr -d \'\\n\'\nCVE_2016_0800=39\n[[ ${CVE_2016_0800} -gt $openssl ]] && let a+=1 && echo "CVE-2016-0800" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n6)\na=0\necho "openssl_vulnerabilities=" |tr -d \'\\n\'\nCVE_2016_0800=42;CVE_2014_8176=30\n[[ ${CVE_2016_0800} -gt $openssl ]] && let a+=1 && echo "CVE-2016-0800" |tr -d \'\\n\'\n[[ ${CVE_2014_8176} -gt $openssl ]] && let a+=1 && echo "CVE-2014-8176" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n7)\na=0\necho "openssl_vulnerabilities=" |tr -d \'\\n\'\nCVE_2016_0800=8;CVE_2014_8176=8\n[[ ${CVE_2016_0800} -gt $openssl ]] && let a+=1 && echo "CVE-2016-0800" |tr -d \'\\n\'\n[[ ${CVE_2014_8176} -gt $openssl ]] && let a+=1 && echo "CVE-2014-8176" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n*)\na=0\necho "openssl_vulnerabilities=" |tr -d \'\\n\'\nCVE_2016_0800=51;CVE_2014_8176=42\n[[ ${CVE_2016_0800} -gt $openssl ]] && let a+=1 && echo "CVE-2016-0800" |tr -d \'\\n\'\n[[ ${CVE_2014_8176} -gt $openssl ]] && let a+=1 && echo ",CVE-2014-8176" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\nesac\n', 
                               'has_param': False}, 
   'openssh_vulnerabilities': {'content': '#openssh\xe6\xbc\x8f\xe6\xb4\x9e\nopenssh=`rpm -qa |grep ^openssh-[0-9] |awk -F- \'{print $3}\' |awk -F. \'{print $1}\'`\ncase $systemnum in\n5)\necho "openssh_vulnerabilities=null@@0" \n;;\n6)\na=0\necho "openssh_vulnerabilities=" |tr -d \'\\n\'\nCVE_2015_5600=114;\n[[ ${CVE_2015_5600} -gt $openssh ]] && let a+=1 && echo "CVE-2015-5600" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n7)\na=0\necho "openssh_vulnerabilities=" |tr -d \'\\n\'\nCVE_2016_0778=11;\n[[ ${CVE_2016_0778} -gt $openssh ]] && let a+=1 && echo "CVE-2016-0778" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n*)\na=0\necho "openssh_vulnerabilities=" |tr -d \'\\n\'\nCVE_2015_5600=22;CVE_2016_0778=23;\n[[ ${CVE_2015_5600} -gt $openssh ]] && let a+=1 && echo "CVE-2015-5600" |tr -d \'\\n\'\n[[ ${CVE_2016_0778} -gt $openssh ]] && let a+=1 && echo ",CVE-2016-0788" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\nesac\n', 
                               'has_param': False}, 
   'ntp_vulnerabilities': {'content': '#ntp\xe6\xbc\x8f\xe6\xb4\x9e\nntp=`rpm -qa |grep ^ntp-[0-9] |awk -F- \'{print $3}\' |awk -F. \'{print $1}\'`\ncase $systemnum in\n5)\na=0\necho "ntp_vulnerabilities=" |tr -d \'\\n\'\nCVE_2014_9294=18;CVE_2014_9293=18;CVE_2014_9295=18\n[[ ${CVE_2014_9294} -gt $ntp ]] && let a+=1 && echo "CVE-2014-9294" |tr -d \'\\n\'\n[[ ${CVE_2014_9293} -gt $ntp ]] && let a+=1 && echo ",CVE-2014-9293" |tr -d \'\\n\'\n[[ ${CVE_2014_9295} -gt $ntp ]] && let a+=1 && echo ",CVE-2014-9295" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n6)\na=0\necho "ntp_vulnerabilities=" |tr -d \'\\n\'\nCVE_2014_9294=2;CVE_2014_9293=2;CVE_2014_9295=2\n[[ ${CVE_2014_9294} -gt $ntp ]] && let a+=1 && echo "CVE-2014-9294" |tr -d \'\\n\'\n[[ ${CVE_2014_9293} -gt $ntp ]] && let a+=1 && echo ",CVE-2014-9293" |tr -d \'\\n\'\n[[ ${CVE_2014_9295} -gt $ntp ]] && let a+=1 && echo ",CVE-2014-9295" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\n*)\na=0\necho "ntp_vulnerabilities=" |tr -d \'\\n\'\nCVE_2014_9294=19;CVE_2014_9293=19;CVE_2014_9295=19\n[[ ${CVE_2014_9294} -gt $ntp ]] && let a+=1 && echo "CVE-2014-9294" |tr -d \'\\n\'\n[[ ${CVE_2014_9293} -gt $ntp ]] && let a+=1 && echo ",CVE-2014-9293" |tr -d \'\\n\'\n[[ ${CVE_2014_9295} -gt $ntp ]] && let a+=1 && echo ",CVE-2014-9295" |tr -d \'\\n\'\nif [[ $a -ne 0 ]];then\n    echo "@@1"\nelse\n    echo "\xe6\x97\xa0@@0"\nfi\n;;\nesac\n', 
                           'has_param': False}, 
   'empty_password_account': {'content': '#\xe7\xa9\xba\xe5\x8f\xa3\xe4\xbb\xa4\xe7\x9a\x84\xe5\xb8\x90\xe5\x8f\xb7\nemptypasswd=`awk -F: \'($2 == "") { print $1 }\' /etc/shadow |tr \'\n\' \',\' |sed "s/\\,$//g"`\nif [ "$emptypasswd" ];then\n    echo "empty_password_account=${emptypasswd}@@1"\nelse\n    echo "empty_password_account=null@@0"\nfi\n', 
                              'has_param': False}, 
   'uid0_account': {'content': '#UID\xe4\xb8\xba0\xe7\x9a\x84\xe9\x9d\x9eroot\xe5\xb8\x90\xe5\x8f\xb7\nuid0=`awk -F: \'($3 == 0) { print $1 }\' /etc/passwd |grep -v root |tr \'\\n\' \',\' |sed "s/\\,$//g"`\nif [ -n "$uid0" ];then\n    echo "uid0_account=${uid0}@@1"\nelse\n    echo "uid0_account=null@@0"\nfi\n', 
                    'has_param': False}, 
   'umask_set': {'content': '#UMASK\xe5\x80\xbc\xe8\xae\xbe\xe7\xbd\xae\numask_set=%s\ncase $systemnum in\n5)\n#umask_v=`cat /etc/bashrc |grep -v "^\\s*#" |grep -i umask|sed -n \'1p\' |awk \'{print $2}\'`\numask_v=`umask | sed \'s/0//\'`\nif [ $umask_set -ne $umask_v ];then\n    echo "umask_set=${umask_v}@@1"\nelse\n    echo "umask_set=${umask_v}@@0"\nfi\n;;\n*)\n#umask_v=`cat /etc/profile |grep -v "^\\s*#" |grep -i umask|sed -n \'1p\' |awk \'{print $2}\'`\numask_v=`umask | sed \'s/0//\'`\nif [ $umask_set -ne $umask_v ];then\n    echo "umask_set=${umask_v}@@1"\nelse\n    echo "umask_set=${umask_v}@@0"\nfi\n;;\nesac\n', 
                 'has_param': True, 'default_param': '027'}, 
   'password_max_day': {'content': '#\xe5\xaf\x86\xe7\xa0\x81\xe6\x9c\x80\xe9\x95\xbf\xe4\xbd\xbf\xe7\x94\xa8\xe5\xa4\xa9\xe6\x95\xb0\npassword_max_day=%s\nmax_day=`more /etc/login.defs | grep -E "PASS_MAX_DAYS" | grep -v "#" |awk -F\' \' \'{print $2}\'`\nif [ $max_day -le $password_max_day ];then\n    echo "password_max_day=${max_day}@@0"\nelse\n    echo "password_max_day=${max_day}@@1"\nfi\n', 
                        'has_param': True, 'default_param': 90}, 
   'password_min_day': {'content': '#\xe5\xaf\x86\xe7\xa0\x81\xe6\x9c\x80\xe7\x9f\xad\xe4\xbd\xbf\xe7\x94\xa8\xe5\xa4\xa9\xe6\x95\xb0\npassword_min_day=%s\nmin_day=`more /etc/login.defs | grep -E "PASS_MIN_DAYS" | grep -v "#" |awk -F\' \' \'{print $2}\'`\nif [[ -n $min_day ]];then\n    if [ $min_day -ge $password_min_day ];then\n        echo "password_min_day=${min_day}@@0"\n    else\n        echo "password_min_day=${min_day}@@1"\n    fi\nelse\n    echo "password_min_day=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@1"\nfi\n', 
                        'has_param': True, 'default_param': 6}, 
   'password_min_length': {'content': '#\xe5\xaf\x86\xe7\xa0\x81\xe9\x9c\x80\xe8\xa6\x81\xe6\xbb\xa1\xe8\xb6\xb3\xe7\x9a\x84\xe6\x9c\x80\xe7\x9f\xad\xe9\x95\xbf\xe5\xba\xa6\npassword_min_length=%s\nmin_len=`more /etc/login.defs | grep -E "PASS_MIN_LEN" | grep -v "#" |awk -F\' \' \'{print $2}\'`\nif [ $min_len -ge $password_min_length ];then\n    if [[ $min_len -ge $password_min_length ]];then\n        echo "password_min_length=${min_len}@@0"\n    else\n        echo "password_min_length=${min_len}@@1"\n    fi\nelse\n    echo \'password_min_length=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1\'\nfi\n', 
                           'has_param': True, 'default_param': 8}, 
   'password_warn_day': {'content': '#\xe7\x94\xa8\xe6\x88\xb7\xe5\xaf\x86\xe7\xa0\x81\xe5\x88\xb0\xe6\x9c\x9f\xe5\x89\x8d\xe8\xad\xa6\xe5\x91\x8a\xe5\xa4\xa9\xe6\x95\xb0\npassword_warn_day=%s\nwarn_age=`more /etc/login.defs | grep -E "PASS_WARN_AGE" | grep -v "#" |awk -F\' \' \'{print $2}\'`\nif [ $warn_age -ge $password_warn_day ];then\n    echo "password_warn_day=${warn_age}@@0"\nelse\n    echo "password_warn_day=${warn_age}@@1"\nfi\n\n', 
                         'has_param': True, 'default_param': 10}, 
   'password_complexity': {'content': '#\xe7\x94\xa8\xe6\x88\xb7\xe5\xaf\x86\xe7\xa0\x81\xe5\xa4\x8d\xe6\x9d\x82\xe5\xba\xa6\xe7\xad\x96\xe7\x95\xa5\npam_pwquality=$(cat /etc/pam.d/system-auth |egrep -v "^(s*)#" |grep password |grep pam_pwquality.so)\npam_cracklib=$(cat /etc/pam.d/system-auth |egrep -v "^(s*)#" |grep password |grep pam_cracklib.so)\nif [ -n "$pam_cracklib" ];then\n    dcredit=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep dcredit |awk -F\'dcredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    lcredit=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep lcredit |awk -F\'lcredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    ucredit=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep ucredit |awk -F\'ucredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    ocredit=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep ocredit |awk -F\'ocredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    retry=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep retry |awk -F\'retry=\' \'{print $2}\' |awk \'{print $1}\' |uniq | head -n 1`\n    minlen=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep minlen |awk -F\'minlen=\' \'{print $2}\' |awk \'{print $1}\' |uniq | head -n 1`\n    difok=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep difok |awk -F\'difok=\' \'{print $2}\' |awk \'{print $1}\' |uniq | head -n 1`\n    enforce_for_root=`cat /etc/pam.d/system-auth |grep pam_cracklib.so |grep enforce_for_root  |uniq |head -n 1`\nelif [ -n "${pam_pwquality}" ];then\n    dcredit=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep dcredit |awk -F\'dcredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    lcredit=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep lcredit |awk -F\'lcredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    ucredit=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep ucredit |awk -F\'ucredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    ocredit=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep ocredit |awk -F\'ocredit=-\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    retry=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep retry |awk -F\'retry=\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    minlen=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep minlen |awk -F\'minlen=\' \'{print $2}\' |awk \'{print $1}\' |uniq |head -n 1`\n    difok=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep difok |awk -F\'difok=\' \'{print $2}\' |awk \'{print $1}\'  |uniq |head -n 1`\n    enforce_for_root=`cat /etc/pam.d/system-auth |grep pam_pwquality.so |grep enforce_for_root  |uniq |head -n 1`\nfi\n\na=0\necho "password_complexity=" |tr -d \'\\n\'\n[ -n "${dcredit}" ] && let a+=1 && echo "${dcredit}\xe4\xb8\xaa\xe6\x95\xb0\xe5\xad\x97" |tr -d \'\\n\'\n[ -n "${lcredit}" ] && let a+=1 && echo ",${lcredit}\xe4\xb8\xaa\xe5\xb0\x8f\xe5\x86\x99\xe5\xad\x97\xe6\xaf\x8d" |tr -d \'\\n\'\n[ -n "${ucredit}" ] && let a+=1 && echo ",${ucredit}\xe4\xb8\xaa\xe5\xa4\xa7\xe5\x86\x99\xe5\xad\x97\xe6\xaf\x8d" |tr -d \'\\n\'\n[ -n "${ocredit}" ] && let a+=1 && echo ",${ocredit}\xe4\xb8\xaa\xe7\x89\xb9\xe6\xae\x8a\xe5\xad\x97\xe7\xac\xa6" |tr -d \'\\n\'\n[ -n "${minlen}" ] && let a+=1 && echo ",\xe6\x9c\x80\xe5\xb0\x8f\xe9\x95\xbf\xe5\xba\xa6\xe4\xb8\xba${minlen}" |tr -d \'\\n\'\n[ -n "${difok}" ] && let a+=1 && echo ",\xe6\x9c\x80\xe5\xb0\x8f\xe5\x85\x81\xe8\xae\xb8\xe5\x92\x8c\xe6\x97\xa7\xe5\xaf\x86\xe7\xa0\x81\xe7\x9b\xb8\xe5\x90\x8c\xe5\xad\x97\xe7\xac\xa6\xe6\x95\xb0\xe4\xb8\xba${difok}\xe4\xb8\xaa" |tr -d \'\\n\'\n[ $a -ne 0 ] && [ -n "${retry}" ] && let a+=1 && echo ",\xe6\x9c\x80\xe5\xa4\x9a\xe5\x8f\xaf\xe4\xbb\xa5${retry}\xe6\xac\xa1\xe8\xbe\x93\xe5\x85\xa5\xe5\xaf\x86\xe7\xa0\x81\xe5\x90\x8e\xe6\x8a\xa5\xe9\x94\x99" |tr -d \'\\n\'\nif [ $a -ne 0 ];then\n    echo "@@0"\nelse\n    echo "\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1"\nfi\n', 
                           'has_param': False}, 
   'password_rem_times': {'content': '#\xe5\xaf\x86\xe7\xa0\x81\xe9\x87\x8d\xe5\xa4\x8d\xe4\xbd\xbf\xe7\x94\xa8\xe6\xac\xa1\xe6\x95\xb0\npassword_rem_times=%s\nrem=`cat /etc/pam.d/system-auth |grep -v "^#" |egrep password |grep pam_unix.so |grep remember |awk -F\'remember=\' \'{print $2}\' |awk \'{print $1}\'`\nif [ ! -n "${rem}" ];then\n    echo "password_rem_times=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1"\nelse\n    [ $rem -ge $password_rem_times ] && echo "password_rem_times=${rem}@@0" || echo "password_rem_times=${rem}@@1"\nfi\n', 
                          'has_param': True, 'default_param': 5}, 
   'password_try_times': {'content': '#\xe5\xaf\x86\xe7\xa0\x81\xe5\x85\x81\xe8\xae\xb8\xe5\xb0\x9d\xe8\xaf\x95\xe7\x99\xbb\xe5\xbd\x95\xe6\xac\xa1\xe6\x95\xb0\npassword_try_times=%s\ndeny=`cat /etc/pam.d/system-auth |grep -v "^#" |egrep auth |grep pam_tally2.so |grep deny`\ndeny_time=`[ -n "$deny" ] && echo ${deny#*deny=} |awk \'{print $1}\'`\nif [ ! -n "${deny_time}" ];then\n    echo "password_try_times=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1"\nelse\n    [ $deny_time -gt $password_try_times ] && echo "password_try_times=${deny_time}@@1" || echo "password_try_times=${deny_time}@@0"\nfi\n', 
                          'has_param': True, 'default_param': 3}, 
   'password_lock_time': {'content': '#\xe5\xaf\x86\xe7\xa0\x81\xe7\x99\xbb\xe9\x99\x86\xe5\xa4\xb1\xe8\xb4\xa5\xe9\x94\x81\xe5\xae\x9a\xe6\x97\xb6\xe9\x97\xb4\npassword_lock_time=%s\ndeny=`cat /etc/pam.d/system-auth |grep -v "^#" |egrep auth |grep pam_tally2.so |grep deny`\nunlocktime=`[ -n "$deny" ] && echo ${deny#*unlock_time=} |awk \'{print $1}\'`\nif [ ! -n "${unlocktime}" ];then\n    echo "password_lock_time=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1"\nelse\n    [ $unlocktime -lt $password_lock_time ] && echo "password_lock_time=${unlocktime}@@1" || echo "password_lock_time=${unlocktime}@@0"\nfi\n', 
                          'has_param': True, 'default_param': 600}, 
   'ip_disguise': {'content': '#IP\xe4\xbc\xaa\xe8\xa3\x85\xe5\x8a\x9f\xe8\x83\xbd\xe7\x8a\xb6\xe6\x80\x81\nip_spool=`cat /etc/host.conf 2>/dev/null |grep -v "^#" |grep nospoof |grep on`\nif [ -n "${ip_spool}" ];then\n    echo "ip_disguise=\xe5\xb7\xb2\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "ip_disguise=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n', 
                   'has_param': False}, 
   'ip_multi': {'content': '##\xe6\x98\xaf\xe5\x90\xa6\xe5\x85\xb3\xe9\x97\xad\xe5\xa4\x9aip\xe7\xbb\x91\xe5\xae\x9a\nip_multi=`cat /etc/host.conf 2>/dev/null |grep -v "^#" |grep multi |grep off`\nif [ -n "${ip_multi}" ];then\n    echo "ip_multi=\xe5\xb7\xb2\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "ip_multi=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n', 
                'has_param': False}, 
   'ip_forward': {'content': '#\xe6\x95\xb0\xe6\x8d\xae\xe5\x8c\x85\xe8\xbd\xac\xe5\x8f\x91\xe5\x8a\x9f\xe8\x83\xbd\xe7\x8a\xb6\xe6\x80\x81\nip_forward=`cat /proc/sys/net/ipv4/ip_forward`\nif [ $ip_forward -ne 0 ];then\n    echo "ip_forward=\xe6\x9c\xaa\xe7\xa6\x81\xe7\x94\xa8@@1"\nelse\n    echo "ip_forward=\xe5\xb7\xb2\xe7\xa6\x81\xe7\x94\xa8@@0"\nfi\n', 
                  'has_param': False}, 
   'icmp_accept_redirect': {'content': '#ICMP\xe6\x8e\xa5\xe6\x94\xb6\xe9\x87\x8d\xe5\xae\x9a\xe5\x90\x91\xe8\xbd\xac\xe5\x8f\x91\xe5\x8a\x9f\xe8\x83\xbd\nall_accept_redirects=`cat /proc/sys/net/ipv4/conf/all/accept_redirects`\ndefault_accept_redirects=`cat /proc/sys/net/ipv4/conf/default/accept_redirects`\nif [ ${all_accept_redirects} -ne 0 -a ${default_accept_redirects} -ne 0 ];then\n    echo "icmp_accept_redirect=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nelse\n    echo "icmp_accept_redirect=\xe5\xb7\xb2\xe5\x85\xb3\xe9\x97\xad@@0"\nfi\n', 
                            'has_param': False}, 
   'icmp_send_redirect': {'content': '#ICMP\xe5\x8f\x91\xe9\x80\x81\xe9\x87\x8d\xe5\xae\x9a\xe5\x90\x91\xe8\xbd\xac\xe5\x8f\x91\xe5\x8a\x9f\xe8\x83\xbd\nicmp_send_redirect=`cat /proc/sys/net/ipv4/conf/all/send_redirects`\nif [ ${icmp_send_redirect} -ne 0 ];then\n    echo "icmp_send_redirect=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nelse\n    echo "icmp_send_redirect=\xe5\xb7\xb2\xe5\x85\xb3\xe9\x97\xad@@0"\nfi\n', 
                          'has_param': False}, 
   'remote_timeout': {'content': '#\xe8\xbf\x9c\xe7\xa8\x8b\xe8\xbf\x9e\xe6\x8e\xa5\xe7\x9a\x84\xe8\xb6\x85\xe6\x97\xb6\xe6\x97\xb6\xe9\x97\xb4\xef\xbc\x88s\xef\xbc\x89\nremote_timeout=%s\nTMOUT=`cat /etc/profile |grep -v "^#" |grep -i TMOUT |egrep -o \'[0-9].*\'`\nif [ ! -n "${TMOUT}" ];then\n    echo "remote_timeout=\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae@@1"\nelse\n    [ ${TMOUT} -le $remote_timeout ] && echo "remote_timeout=${TMOUT}@@0"\n    [ ${TMOUT} -gt $remote_timeout ] && echo "remote_timeout=${TMOUT}@@1"\nfi\n', 
                      'has_param': True, 'default_param': 900}, 
   'grub_password': {'content': '#GRUB\xe5\xaf\x86\xe7\xa0\x81\xe8\xae\xbe\xe7\xbd\xae\ncase $systemnum in\n7)\ngrub2pas=`cat /etc/grub.d/00_header |grep -v "^#" |grep password`\nif [ -n "${grub2pas}" ];then\n    echo "grub_password=\xe5\xb7\xb2\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "grub_password=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\n*)\ngrubpas=`cat /boot/grub/grub.conf 2>/dev/null |grep -v "^#" |grep "password*"`\nmenupas=`cat /boot/grub/menu.lst 2>/dev/null |grep -v "^#" |grep "password*"`\nlilopas=`cat /etc/lilo.conf 2>/dev/null |grep -v "^#" |grep "password*"`\nif [ -n "${grubpas}" -o -n "${menupas}" -o -n "${lilopas}" ];then\n    echo "grub_password=\xe5\xb7\xb2\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "grub_password=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n;;\nesac\n', 
                     'has_param': False}, 
   'core_dump': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe7\x9a\x84CORE DUMP\ncore_dump=$(ulimit -c)\nif [ -n ${core_dump} ];then\n    echo "core_dump=\xe5\xb7\xb2\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "core_dump=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n', 
                 'has_param': False}, 
   'ctrl_alt_del': {'content': '#Ctrl+Alt+Del\xe7\xbb\x84\xe5\x90\x88\xe9\x94\xae\xe5\x90\xaf\xe7\x94\xa8\xe7\x8a\xb6\xe6\x80\x81\ncase $systemnum in\n5)\nctrl_alt_del=`cat /etc/inittab |grep -v "^#" |grep ctrlaltdel |grep shutdown`\nif [ -n "${ctrl_alt_del}" ];then\n    echo "ctrl_alt_del=\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "ctrl_alt_del=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n;;\n6)\nctrl_alt_del=`cat /etc/init/control-alt-delete.conf |grep -i control-alt-delete |grep shutdown`\nif [ -n "${ctrl_alt_del}" ];then\n    echo "ctrl_alt_del=\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "ctrl_alt_del=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n;;\n7)\nctrl_alt_del=`ls -l /usr/lib/systemd/system/ctrl-alt-del.target 2>/dev/null |grep "reboot.target"`\nif [ -n "${ctrl_alt_del}" ];then\n    echo "ctrl_alt_del=\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "ctrl_alt_del=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n;;\nesac\n', 
                    'has_param': False}, 
   'selinux_status': {'content': '#Selinux\xe5\x90\xaf\xe7\x94\xa8\xe7\x8a\xb6\xe6\x80\x81\nselinux=`cat /etc/selinux/config |grep -v "^#" |grep SELINUX |grep disabled`\nif [ -n "${selinux}" ];then\n    echo "selinux_status=\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "selinux_status=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n', 
                      'has_param': False}, 
   'firewall_status': {'content': '#\xe9\x98\xb2\xe7\x81\xab\xe5\xa2\x99\xe5\x90\xaf\xe7\x94\xa8\xe7\x8a\xb6\xe6\x80\x81\ncase $systemnum in\n7)\nsystemctl status firewalld.service &>/dev/null\nif [ $? -ne 0 ];then\n    echo "firewall_status=\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "firewall_status=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n;;\n*)\nservice iptables status &> /dev/null\nif [ $? -ne 0 ];then\n    echo "firewall_status=\xe5\x85\xb3\xe9\x97\xad@@0"\nelse\n    echo "firewall_status=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nfi\n;;\nesac\n', 
                       'has_param': False}, 
   'GSSAPIAuthentication': {'content': '#GSSAPIAuthentication\nssh_gssAu=`cat /etc/ssh/sshd_config |grep -v "^#" |grep ^GSSAPIAuthentication |grep yes`\nif [ -n "${ssh_gssAu}" ];then\n    echo "GSSAPIAuthentication=yes@@1"\nelse\n    echo "GSSAPIAuthentication=no@@0"\nfi\n', 
                            'has_param': False}, 
   'GSSAPICleanupCredentials': {'content': '#GSSAPICleanupCredentials\nssh_gssCl=`cat /etc/ssh/sshd_config |grep -v "^#" |grep ^GSSAPICleanupCredentials |grep yes`\nif [ -n "$ssh_gssCl" ];then\n    echo "GSSAPICleanupCredentials=yes@@1"\nelse\n    echo "GSSAPICleanupCredentials=no@@0"\nfi\n', 
                                'has_param': False}, 
   'openssh_protocol': {'content': '#\xe5\x8d\x8f\xe8\xae\xae1/2\xe5\xbc\x80\xe5\x90\xaf\xe7\x8a\xb6\xe6\x80\x81\nssh_Protocol=`cat /etc/ssh/sshd_config |grep -v "^#" |grep Protocol |awk \'{print $2}\'`\nif [[ $ssh_Protocol -eq 2 ]];then\n    echo "openssh_protocol=\xe4\xbb\x85\xe5\xbc\x80\xe5\x90\xaf\xe5\x8d\x8f\xe8\xae\xae2@@0"\nelif [[ $ssh_Protocol -eq 1 ]];then\n    echo "openssh_protocol=\xe4\xbb\x85\xe5\xbc\x80\xe5\x90\xaf\xe5\x8d\x8f\xe8\xae\xae1@@1"\nelif [ ! -n "$ssh_Protocol" ];then\n    echo "openssh_protocol=\xe6\x9c\xaa\xe9\x85\x8d\xe7\xbd\xae@@1"\nelse\n    echo "openssh_protocol=\xe6\x97\xa2\xe5\xbc\x80\xe5\x90\xaf\xe4\xba\x86\xe5\x8d\x8f\xe8\xae\xae2\xef\xbc\x8c\xe4\xb9\x9f\xe5\xbc\x80\xe5\x90\xaf\xe4\xba\x86\xe5\x8d\x8f\xe8\xae\xae1@@1"\nfi\n', 
                        'has_param': False}, 
   'root_remote': {'content': '#\xe8\xbf\x9c\xe7\xa8\x8broot\xe6\x98\xaf\xe5\x90\xa6\xe5\xbc\x80\xe5\x90\xaf\nssh_root=`cat /etc/ssh/sshd_config |grep -v "^#" |grep PermitRootLogin |grep yes`\nif [ -n "${ssh_root}" ];then\n    echo "root_remote=\xe6\x9c\xaa\xe5\x85\xb3\xe9\x97\xad@@1"\nelse\n    echo "root_remote=\xe5\x85\xb3\xe9\x97\xad@@0"\nfi\n', 
                   'has_param': False}, 
   'openssh_x11': {'content': '#X11Forwarding\nssh_X=`cat /etc/ssh/sshd_config |grep -v "^#" |grep ^X11Forwarding |grep yes`\nif [ -n "${ssh_X}" ];then\n    echo "openssh_x11=yes@@1"\nelse\n    echo "openssh_x11=no@@0"\nfi\n', 
                   'has_param': False}, 
   'boot_services_status': {'content': '#\xe5\xbc\x80\xe6\x9c\xba\xe5\x90\xaf\xe5\x8a\xa8\xe7\x9a\x84\xe6\x9c\x8d\xe5\x8a\xa1\xe8\xbf\x90\xe8\xa1\x8c\xe7\x8a\xb6\xe6\x80\x81\ncase $systemnum in\n7)\nchkconfig=`systemctl list-unit-files --type=service |grep enabled |awk \'{print $1}\'`\na=0\necho "boot_services_status=" |tr -d \'\\n\'\nfor i in $chkconfig\ndo\n    b=`systemctl status $i 2>/dev/null |grep "Active: active"`\n    if [ ! -n "${b}" ];then\n        echo "${i}" |tr \'\\n\' \' \' && let a+=1\n    fi\ndone\nif [ $a = 0 ];then\n    echo "\xe6\x97\xa0@@0"\nelse\n    echo \'@@1\'\nfi\n;;\n*)\nservice=`service --status-all 2>/dev/null |grep \'(pid\' |awk \'{print $1}\'`\nchkconfig_on=`chkconfig --list |awk \'{print $1,$5,$7}\' |egrep \':on|"\xe5\xbc\x80\xe5\x90\xaf"\' |awk \'{print $1}\' | egrep -v \'lvm2-monitor|firstboot|nco|ncp|tip\'`\na=0\necho "boot_services_status=" |tr -d \'\\n\'\nfor i in $chkconfig_on\ndo\n    service $i status &>/dev/null\n    result=$?\n    if [ $result -eq 1 ];then\n        echo "$i" |tr \'\\n\' \' \' && let a+=1\n    fi\ndone\nif [ $a = 0 ];then\n    echo "\xe6\x97\xa0@@0"\nelse\n    echo \'@@1\'\nfi\n;;\nesac\n', 
                            'has_param': False}, 
   'sys_load_info': {'content': '#\xe7\xb3\xbb\xe7\xbb\x9f\xe8\xb4\x9f\xe8\xbd\xbd\xe7\x8a\xb6\xe5\x86\xb5(15min)\nsys_load_info=%s\nsys_load_info_num=`uptime |awk \'{print $NF}\' |awk -F. \'{print $1}\'`\nsys_load_info_num_a=`uptime |awk \'{print $NF}\'`\nprocessor=`cat /proc/cpuinfo |grep -c processor`\nprocessor_num=`expr ${processor} \\* ${sys_load_info}`\nif [ $sys_load_info_num -gt $processor_num ]; then\n    echo "sys_load_info=${sys_load_info_num_a}@@1"\nelse\n    echo "sys_load_info=${sys_load_info_num_a}@@0"\nfi\n', 
                     'has_param': True, 'default_param': 3}, 
   'swap_use_status': {'content': '##\xe4\xba\xa4\xe6\x8d\xa2\xe5\x88\x86\xe5\x8c\xba\xe4\xbd\xbf\xe7\x94\xa8\xe6\x83\x85\xe5\x86\xb5\nswap_use_status=%s\nswap=`free -m |grep -i swap |awk \'{print $2,$3,$4}\'`\nread a b c < <(echo ${swap})\nif [ ${a} -gt 0 ];then\nswap_used=$(printf "%%d%%%%" $((b*100/a)))\nelse\nswap_used=0%%\nfi\nif [[ `echo $swap_used |sed "s/\\%%$//g"` -ge `echo $swap_use_status |sed "s/\\%%$//g"` ]];then\n    echo "swap_use_status=<table class^\\"new_table\\"><tr><th>swap\xe6\x80\xbb\xe9\x87\x8f</th><th>\xe5\xb7\xb2\xe7\x94\xa8swap</th><th>\xe7\xa9\xba\xe9\x97\xb2swap</th><th>swap\xe4\xbd\xbf\xe7\x94\xa8\xe7\x8e\x87</th><tr class^"danger"><td>${a}M</td><td>${b}M</td><td>${c}M</td><td>${swap_used}</td></tr></table>@@1"\nelse\n    echo "swap_use_status=<table class^\\"new_table\\"><tr><th>swap\xe6\x80\xbb\xe9\x87\x8f</th><th>\xe5\xb7\xb2\xe7\x94\xa8swap</th><th>\xe7\xa9\xba\xe9\x97\xb2swap</th><th>swap\xe4\xbd\xbf\xe7\x94\xa8\xe7\x8e\x87</th><tr><td>${a}M</td><td>${b}M</td><td>${c}M</td><td>${swap_used}</td></tr></table>@@0"\nfi\n', 
                       'has_param': True, 'default_param': '30%'}, 
   'disk_use_status': {'content': '#\xe7\xa3\x81\xe7\x9b\x98\xe7\xa9\xba\xe9\x97\xb4\xe4\xbd\xbf\xe7\x94\xa8\xe7\x8a\xb6\xe6\x80\x81\ndisk_use_status=%s\nm=`df -hPBM |sed \'1d\' |grep -v "/dev/sr" |grep -v devtmpfs |grep -v tmpfs |grep -v "loop" |wc -l`\necho "disk_use_status=<table class^\\"new_table\\"><tr><th>Filesystem</th><th>Size</th><th>Used</th><th>Avail</th><th>Use%%</th><th>Mounted_on</th>" |tr -d \'\\n\'\nn=0\nfor ((i=1;i<=m;i++))\ndo\n    disk=`df -hPBM |sed \'1d\' |grep -v tmpfs |grep -v devtmpfs |grep -v "/dev/sr" |sed -n "${i}p"`\n    read a b c d e f < <(echo ${disk})\n    f_num=`echo $e |sed "s/\\%%$//g"`\n    if [ ${f_num} -gt  `echo ${disk_use_status} |sed "s/\\%%//g"` ];then\n       let n+=1 && echo "<tr class^"danger"><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td><td>${e}</td><td>${f}</td></tr>" |tr -d \'\\n\'\n\n    else\n        echo "<tr><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td><td>${e}</td><td>${f}</td></tr>" |tr -d \'\\n\'\n    fi\ndone\nif [ "$n" == 0 ];then\n    echo \'</table>@@0\'\nelse\n    echo "</table>@@1"\nfi\n', 
                       'has_param': True, 'default_param': '90%'}, 
   'inode_use_status': {'content': '#Inode\xe4\xbd\xbf\xe7\x94\xa8\xe6\x83\x85\xe5\x86\xb5\ninode_use_status=%s\nm=`df -hiTPBK |sed \'1d\' |grep -v "/dev/sr" |grep -v tmpfs |grep -v devtmpfs |grep -v "loop"  |wc -l`\necho "inode_use_status=<table class^\\"new_table\\"><tr><th>Filesystem</th><th>Type</th><th>Inode</th><th>Iused</th><th>Ifree</th><th>IUse%%</th><th>Mounted_on</th>" |tr -d \'\\n\'\nn=0\nfor ((i=1;i<=m;i++))\ndo\n    read a b c d e f g < <(df -hiTPBK |sed \'1d\' |grep -v "/dev/sr" |grep -v tmpfs |grep -v devtmpfs |grep -v "loop"  |sed -n "${i}p")\n    tmp=`echo $f |awk -F%% \'{print $1}\'`\n    inode_use_status_data=`echo ${inode_use_status} |sed "s/\\%%//g"`\n    if [[ ${tmp} -gt $inode_use_status_data ]];then\n        echo "<tr class^"danger"><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td><td>${e}</td><td>${f}</td><td>${f}</td></tr>" |tr -d \'\\n\' && let n+=1\n    else\n        echo "<tr><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td><td>${e}</td><td>${f}</td><td>${g}</td></tr>" |tr -d \'\\n\'\n    fi\ndone\nif [ $n == 0 ];then\n    echo \'</table>@@0\'\nelse\n    echo "</table>@@1"\nfi\n', 
                        'has_param': True, 'default_param': '90%'}, 
   'login_failed_times': {'content': '#\xe7\x99\xbb\xe5\xbd\x95\xe5\xa4\xb1\xe8\xb4\xa5\xe6\xac\xa1\xe6\x95\xb0\xef\xbc\x8830\xe5\xa4\xa9\xef\xbc\x89\nlogin_failed_times=%s\na=`date +%%s`\nb=`expr $a - 2592000`\nc=`date -d @$b "+%%Y%%m%%d%%H%%M%%S"`\nl_total=`lastb |grep -v btmp |grep -v ^$ |wc -l`\nl_befor=`lastb -t $c |grep -v btmp |grep -v ^$ |wc -l`\nl_end=`expr $l_total - $l_befor`\nlastb=`lastb |sed -n 1,${l_end}p |wc -l`\nif [ $lastb -gt ${login_failed_times} ];then\n    echo "login_failed_times=${lastb}@@1"\nelse\n    echo "login_failed_times=${lastb}@@0"\nfi\n', 
                          'has_param': True, 'default_param': '100'}, 
   'zombie_process': {'content': '#\xe5\x83\xb5\xe5\xb0\xb8\xe8\xbf\x9b\xe7\xa8\x8b\xe4\xbf\xa1\xe6\x81\xaf\nzombie=`ps -A -o stat,ppid,pid,cmd |grep -e \'^[Zz]\'`\nif [ -n "${zombie}" ];then\n    num=`ps -A -o stat,ppid,pid,cmd |grep -e \'^[Zz]\' |wc -l`\n    echo "zombie_process=<table class^\\"new_table\\"><tr><th>stat</th><th>ppid</th><th>pid</th><th>cmd</th></tr>" |tr -d \'\\n\'\n    for i in `seq 1 $num`\n    do\n        zombie_tmp=`ps -A -o stat,ppid,pid,cmd |grep -e \'^[Zz]\' |sed -n "${i}p"`\n        read a b c d < <(echo $zomebie_tmp)\n        echo "<tr class^"danger"><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td></tr>" |tr -d \'\\n\'\n    done\n    echo \'</table>@@1\'\nelse\n    echo "zombie_process=null@@0"\nfi\n', 
                      'has_param': False}, 
   'lvm_set': {'content': '#\xe6\xa3\x80\xe6\x9f\xa5lvm\nif $(lvs 2>/dev/null | awk \'{print $1}\' | grep -q \'LV\'); then\n    echo "lvm_set=\xe5\x90\xaf\xe7\x94\xa8@@0"\nelse\n    echo "lvm_set=\xe6\x9c\xaa\xe5\x90\xaf\xe7\x94\xa8@@1"\nfi\n', 
               'has_param': False}, 
   'sudo_account': {'content': '#sudo\xe6\x9d\x83\xe9\x99\x90\xe8\xb4\xa6\xe5\x8f\xb7\nsudoer=$(egrep -v "^#|^Default|^%wheel|^root|^$" /etc/sudoers | grep \'ALL=\' | awk \'{print $1}\')\nif [ -n "${sudoer}" ]; then\n    echo "sudo_account=`echo ${sudoer}`@@1"\nelse\n    echo "sudo_account=null@@0"\nfi\n', 
                    'has_param': False}, 
   'errlog_num': {'content': '#\xe6\x97\xa5\xe5\xbf\x97\xe6\x8a\xa5\xe9\x94\x99\nerrlog_num=$(egrep -wic "kernel.*(error|fail|warn|warning|not)" /var/log/messages)\nif [ ${errlog_num} != 0 ];then\n    echo "errlog_num=${errlog_num}@@1"\nelse\n    echo "errlog_num=${errlog_num}@@0"\nfi\n', 
                  'has_param': False}, 
   'dmesg_err_num': {'content': '#\xe6\x97\xa5\xe5\xbf\x97\xe6\x8a\xa5\xe9\x94\x99\ndmesg_err_num=$(egrep -wic "kernel.*(error|fail|warn|warning|not)" /var/log/dmesg)\nif [ ${dmesg_err_num} != 0 ];then\n    echo "dmesg_err_num=${dmesg_err_num}@@1"\nelse\n    echo "dmesg_err_num=${dmesg_err_num}@@0"\nfi\n', 
                     'has_param': False}}